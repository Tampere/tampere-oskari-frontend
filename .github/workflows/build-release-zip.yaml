name: Build and release tag

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build-dist-packages:
    runs-on: ubuntu-latest
    env:
      PROD_IMAGE: "ghcr.io/${{ github.repository }}/tre-oskari-${{ github.ref_name }}-prod"
      TEST_IMAGE: "ghcr.io/${{ github.repository }}/tre-oskari-${{ github.ref_name }}-test"
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: 'Force tag to package version'
        run: npm version --allow-same-version=true --git-tag-version=false ${{ github.ref_name }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ github.ref_name }}

# Create a gzip file containing the built frontend
      - name: 'Build production Inventory Image'
        run: |
          docker build . --target buildimage --tag  ${{ steps.meta.outputs.tags }}-prod --build-arg BUILD_TARGET=build
          docker push ${{ steps.meta.outputs.tags }}-prod
      - name: 'Build test Inventory Image'
        run: |
          docker build . --target buildimage --tag  ${{ steps.meta.outputs.tags }}-test --build-arg BUILD_TARGET=build:test
          docker push  ${{ steps.meta.outputs.tags }}-test
      - name: 'Extract production gzip'
        run: |
          id=$(docker create  ${{ steps.meta.outputs.tags }}-prod)
          docker cp $id:/opt/oskari/dist - | gzip > oskari-frontend-${{ github.ref_name }}-prod.tar.gz
          docker rm -v $id
      - name: 'Extract test gzip'
        run: |
          id=$(docker create ${{ steps.meta.outputs.tags }}-test)
          docker cp $id:/opt/oskari/dist - | gzip > oskari-frontend-${{ github.ref_name }}-test.tar.gz
          docker rm -v $id
      - name: "Release zipped images"
        uses: softprops/action-gh-release@v2
        with:
          files: |
            oskari-frontend-${{ github.ref_name }}-prod.tar.gz
            oskari-frontend-${{ github.ref_name }}-test.tar.gz
